version: "3"

services:
  # Redis service for WebSocket state management
  redis:
    image: redis:alpine
    container_name: socket-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Node.js application
  backend:
    build:
      context: ./backend
    container_name: socket-backend
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      - NODE_ENV=production
      - PORT=5000
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:5000/api",
        ]
      interval: 20s
      timeout: 5s
      retries: 3

  # Frontend React application with Nginx
  frontend:
    build:
      context: ./frontend
    container_name: socket-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80",
        ]
      interval: 20s
      timeout: 5s
      retries: 3

volumes:
  redis-data:
